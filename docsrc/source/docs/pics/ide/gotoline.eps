%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (gotoline.eps)
%%CreationDate: (Fri Dec  8 00:17:10 2000)
%%BoundingBox: 0 0 319 83
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 320 84
userdict begin
%%BeginData:
DisplayImage
0 0
320 84
12.000000
320 84
1
0
0
9
c0c0c0
f8fcf8
00fc00
000080
008000
000000
f8fc00
f87cf8
00fcf8
00ff003f00120103000b0103005301030022010300050101009100120101000502030005
01010052010100010101000a010000170101000501010091001201010005020300050101
0051010100020101000901010017010100990001010e0001010100050203000501010001
014700070101000601030002010500020103000d0101000301030002010400030103000a
017600010101000e01010005020300050101005101010005010100010101000201010004
010100010101000c01010005010100020101000101010001010100010101007e01010001
0101000e0101000502030005010100510101000101020000010100010101000201010004
010100010101000c010100050101000201010001010100010105007e0101000101010001
010a00010101000502030005010100010147000701010002010100000101000101010002
01010004010100010101000c010100050101000201010001010100010101000d01720001
01010001010100010101000a010100050203000501010052010100010101000001010001
010100020101000001010001010100010101000c01010005010100020101000101010001
010100010101007a0101000101010001010100010101000a010300030203000301030053
0104000101030004010200030103000b010500010105000001010001010100020103007b
010100010101000101010001010100ff0031010100010101000101010001010100ff0031
010100010101000101010001010100ff0031010100010101000101010001010100ff0031
010100010101000101010001010100ff0031010100010101000101010001010100ff0031
010100010101000101010001010100ff0031010100010101000101010001010100ff0031
010100010101000101010001010100ff0031010100010101000101010001010100ff0031
010100010101000101010001010100ff0031010100010101000101010001010100ff0031
010100010101000101010001010100ff0031010100010101000101010001010100ff0031
010100010101000101010001010100d00307040703270417001001010001010100010101
000101010018010600490103000501010032010200240307040201000403032704010503
04040501040405030401001001010001010100010101000101010019010100020100000a
0100003f0101000501010033010100240307040101010403032704010501040605010406
050104010010010100010101000101010001010100190101000d0101003f0101003b0101
002403070103040303270401050104060501040605010401001001010001010100010101
000101010019010100010100000101040002010500020103000201020000010100090104
000301030002010100020101000b0101000301030002010400030103000a060400020101
000101010001010500020104000201030002010200000101001103070401010104030327
040105010406050104060501040100100101000101010001010100010101001901040001
010100010101000201010004010100010101000201010000010200080101000101010001
0101000101010001010100020101000b0101000501010002010100010101000101010001
010100090601000106010001010100010101000101010000010000000101000101010001
010100000101000101010002010100000102001003070401010104030327040105010406
050104060501040100100101000101010001010100010101001901010001010000010101
000101010002010100040105000201020000010100080101000101010001010500010101
0000010000000101000b0101000501010002010100010101000101050009060100010601
000101010001010100010101000001000000010100010101000101010000010500020102
000001010010030704010101040303270401050104060501040605010401001001010001
01010001010100010101001901010004010100010101000201010004010100060101000c
01010001010100010101000501010000010000000101000b010100050101000201010001
010100010101000d06010001060100010101000101010001010100000100000001010001
010100010101000001010006010100140307040101010403032704010501040405050404
050104010010010100010101000101010001010100190101000201000000010100010101
0002010100000101000101010001010100020101000c0101000101010001010100010101
0002010100000101000c0101000501010002010100010101000101010001010100090601
000106010001010100010101000101010000010000000101000101010001010100000101
000101010002010100140307040101010403032704010501040505030405050104010010
010100010101000101010001010100180106000001010001010100030102000301030002
0103000b010100010101000201030003010100000101000a010500010105000001010001
010100020103000a06010001060100020102000001010000010100020101000001010000
010200020103000201030013030701050401032704010503040405010404050304010010
010100010101000101010001010100d00307070703270417001001010001010100010101
0001010100d003070707032704170010010100010101000101010001010100ff00310101
00010101000101010001010100ff0031010100010101000101010001010100ff00310101
00010101000101010001010100ff0031010100010101000101010001010100ff00310101
00010101000101010001010100ff0031010100010101000101010001010100ff00310101
00010101000101010001010100ff0031010100010101000101010001010100ff00310101
00010101000101010001010100ff0031010100010101000101010001010100ff00310101
00010101000101010001010100ff003101010001010100010101000101010040043f0037
043f00380101000101010001010100010101004004190802040206020401060104180037
0409050304220503040a0038010100010101000101010001010100400418080104000801
040206010401060104180037040805010401050104230501040a00380101000101010001
010100010101004004170801040208010401060104000601041900370407050104020501
04230501040a003801010001010100010101000101010040041708010402080104010601
0400060104190037040705010406050304020504040305030403050304050501040a0038
01010001010100010101000101010040041708010402080104010603041a003704070501
0409050104010501040105010401050104010501040105010401050104040501040a0038
010100010101000101010001010100400417080104020801040106010400060104190507
002f04070501040605040401050104010501040105010405050504040501040a05070030
010100010101000101010001010100400417080104020801040106010400060104190507
002f04070501040205010400050104010501040105010401050104010501040505010408
0501040a0507003001010001010100010101000101010040041808010400080104020601
0401060104180507002f0408050104010501040005010401050104010501040105010401
050104010501040105010401050104040501040a05070030010100010101000101010001
0101004004190802040206020401060104180507002f0409050304020502040005010400
050104010501040205030403050304030505040805070030010100010101000101010001
01010040043f0507002f043f0507003001010001010100010101000101010040043f0507
002f043f0507003001010001010100010101000101010048053f0037053f003001010001
010100010101000101010048053f0037053f003001010001010100010101000101010048
053f0037053f003001010001010100010101000101010048053f0037053f003001010001
010100010101000101010048053f0037053f003001010001010100010101000101010048
053f0037053f0030010100010101000101010001010100ff003101010001010100010101
0001010100ff0031010100010101000101010001010100ff003101010001010100010101
0001010100ff0031010100010101000101010001010100ff003101010001010100010101
0001010100ff0031010100010101000101010001010100ff003101010001010100010101
0001010100ff0031010100010101000101010001010100ff003101010001010100010101
0001010100ff003101010001010100010101000101ff0135000101010001010100ff0039
01010001010100ff00390101000101ff013d00ff003f00ff003f00ff003f00ff003f
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 319 83
%%EOF
