%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (params.eps)
%%CreationDate: (Tue Nov 28 23:50:42 2000)
%%BoundingBox: 0 0 431 83
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 432 84
userdict begin
%%BeginData:
DisplayImage
0 0
432 84
12.000000
432 84
1
0
0
9
c0c0c0
f8fcf8
00fc00
000080
008000
f8fc00
000000
f8fc78
00fcf8
00ff00af00120103000b01030069010500ff0018001201010005020300050101006a0101
00010101006a010000ab001201010005020300050101006a0101000101010069010100ab
0001010e0001010100050203000501010001015f00080101000101010000010200000101
000201030003010200000101000001020000010100020103000201050009010100000102
000201030002010200000101000201030002010500020103000201050002010300020102
0000010100020103000a018600010101000e01010005020300050101006a010400020101
000001020000010100010101000101010001010100020101000001020004010100010101
000001000000010100090101000101010004010100020101000001020004010100010101
000001000000010100000101000101010002010100040101000101010002010100000102
0000010100010101008e010100010101000e01010005020300050101006a010100050102
000001010000010100010101000101010001010100020102000001010001010400010101
000001000000010100090101000101010001010400020102000001010001010400010101
000001000000010100000105000201010004010500020102000001010001010100910101
000101010001010a0001010100050203000501010001015f000801010005010100040101
000101010001010100010101000201010004010100010101000101010000010000000101
000901010001010100000101000101010002010100040101000101010001010100000100
000001010000010100060101000401010006010100070101000a01820001010100010101
00010101000a01010005020300050101006a010100050101000401010001010100020104
000201010004010100010101000101010000010000000101000901010001010100000101
000101010002010100040101000101010001010100000100000001010000010100010101
00020101000001010001010100010101000201010004010100010101008a010100010101
0001010100010101000a0103000302030003010300690103000301030004010300060101
000101030004010200000101000001010002010100090104000201020000010100000103
000401020000010100000101000201010001010300040102000301030002010300040103
008b010100010101000101010001010100a00101000101010022010100d5010100010101
000101010001010100a101030022010300d4010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a10101000101010001010100010101007803ff
000704170008010100010101000101010001010100100505006103ff0007040106030404
0601040406030401000801010001010100010101000101010011050100010501002a0100
003403ff0007040106010406060104060601040100080101000101010001010100010101
001105010001050100290101003403ff0007040106010406060104060601040100080101
000101010001010100010101001105010001050100010103000201020000010100020103
000201050002010300020105000201030002010200000101002103ff0007040106010406
060104060601040100080101000101010001010100010101001105040005010100020101
000001020004010100010101000001000000010100000101000101010002010100040101
000101010002010100000102002003ff0007040106010406060104060601040100080101
000101010001010100010101001105010005010400020102000001010001010400010101
00000100000001010000010500020101000401050002010200000101002003ff00070401
060104060601040606010401000801010001010100010101000101010011050100040101
000101010002010100040101000101010001010100000100000001010000010100060101
0004010100060101002403ff000704010601040406050404060104010008010100010101
000101010001010100110501000401010001010100020101000401010001010100010101
000001000000010100000101000101010002010100000101000101010001010100020101
002403ff0007040106010405060304050601040100080101000101010001010100010101
001005030004010200000101000001030004010200000101000001010002010100010103
000401020003010300020103002303ff0007040106030404060104040603040100080101
00010101000101010001010100780307070703ef00070417000801010001010100010101
0001010100780307070703ef000704170008010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a1010100010101000101010001010100ff00a1
010100010101000101010001010100ff00a101010001010100010101000101010058043f
006f043f0058010100010101000101010001010100580419080204020502040105010418
006f0409060304220603040a005801010001010100010101000101010058041808010400
080104020501040105010418006f040806010401060104230601040a0058010100010101
00010101000101010058041708010402080104010501040005010419006f040706010402
060104230601040a00580101000101010001010100010101005804170801040208010401
0501040005010419006f040706010406060304020604040306030403060304050601040a
005801010001010100010101000101010058041708010402080104010503041a006f0407
06010409060104010601040106010401060104010601040106010401060104040601040a
005801010001010100010101000101010058041708010402080104010501040005010419
0607006704070601040606040401060104010601040106010405060504040601040a0607
005001010001010100010101000101010058041708010402080104010501040005010419
060700670407060104020601040006010401060104010601040106010401060104050601
04080601040a060700500101000101010001010100010101005804180801040008010402
050104010501041806070067040806010401060104000601040106010401060104010601
0401060104010601040106010401060104040601040a0607005001010001010100010101
000101010058041908020402050204010501041806070067040906030402060204000601
040006010401060104020603040306030403060504080607005001010001010100010101
000101010058043f06070067043f0607005001010001010100010101000101010058043f
06070067043f0607005001010001010100010101000101010060063f006f063f00500101
0001010100010101000101010060063f006f063f00500101000101010001010100010101
0060063f006f063f005001010001010100010101000101010060063f006f063f00500101
0001010100010101000101010060063f006f063f00500101000101010001010100010101
0060063f006f063f0050010100010101000101010001010100ff00a10101000101010001
01010001010100ff00a1010100010101000101010001010100ff00a10101000101010001
01010001010100ff00a1010100010101000101010001010100ff00a10101000101010001
01010001010100ff00a1010100010101000101010001010100ff00a10101000101010001
01010001010100ff00a1010100010101000101010001010100ff00a10101000101010001
01010001010100ff00a101010001010100010101000101ff01a5000101010001010100ff
00a901010001010100ff00a90101000101ff01ad00ff00af00ff00af00ff00af00ff00af

%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 431 83
%%EOF
