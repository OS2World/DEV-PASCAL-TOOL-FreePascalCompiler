fpc.sty defines the following:

\procedure{name}{args}{desc}{errs}{seealso}
\Procedure{name}{desc}{errs}{seealso}
\function{name}{args}{return-type}{desc}{errs}{seealso}
\Function{name}{return-type}{desc}{errs}{seealso}

here is:
name : the name of the function/procedure
args : the (optional) arguments. type them between (), the sty doesn't add
them.
desc : the description of what it does. This can be very long.
errs : possible errors, and what the function then does.
seealso : info about related commands.

Each procedure/punction call produces a subsection. it adds a label
'pro:name' or 'fu:name' and an index entry 'name'.
then it gives the declaration as in the pascal file,
it adds the description, the errors and see also, all in a list.
the Capital letter commands are shorthands for if the function has no
arguments (such as WhereX or so in crt.)

So the above \function would produce:

name    (format of subsection)
------------------------------------

Declaration: name args : return-type

Description : desc

Errors : errs

See also : seealso

The style redifines the \maketitle command, and adds a
\description{Your description goes here}
\version{Your version goes here}
command, which produces something on the titlepage. (see the docs for
examples)

it also defines 
\var{arg}
which typesets in \texttt its argument

\seef{name}
makes a cross reference (pageref) to function name (be careful about capitals).
\seep{name}
makes a cross reference (pageref) to procedure name..
\seem{man}{sec}
produces a reference to a UNIX man page. as in : 
man (sec)

For nice typesetting it defines also \fpc, which nicely formats the name of
the compiler.

Then it defines also
\linux
\dos
\msdos
\ostwo
\windowsnt
\windows
commands, which just typeset in small caps the name of the OS's...

I think that's about it.
Michael.
