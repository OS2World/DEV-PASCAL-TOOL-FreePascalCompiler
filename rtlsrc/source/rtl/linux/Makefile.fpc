#
#   Makefile.fpc for Free Pascal Linux RTL
#

[package]
main=rtl

[target]
loaders=prt0 dllprt0 cprt0 gprt0 cprt21 gprt21
units=$(SYSTEMUNIT) objpas strings \
      linux $(CPU_UNITS) initc \
      dos crt objects printer lineinfo \
      sysutils typinfo math \
      getopts heaptrc  \
      errors sockets gpm ipc serial terminfo \
      video mouse keyboard dynlibs dl
rsts=math typinfo variants

[require]
nortl=y

[clean]
units=syslinux linux

[install]
fpcpackage=y

[default]
fpcdir=../..
target=linux

[compiler]
includedir=$(INC) $(PROCINC) $(UNIXINC)
sourcedir=$(INC) $(PROCINC) $(UNIXINC)
targetdir=.

[lib]
libname=libfprtl.so
libversion=1.0
libunits=$(SYSTEMUNIT) objpas strings \
      unix ports \
      dos crt objects printer \
      sysutils typinfo math \
      cpu mmx getopts heaptrc \
      errors sockets ipc dynlibs

[prerules]
RTL=..
INC=$(RTL)/inc
PROCINC=$(RTL)/$(CPU_TARGET)
UNIXINC=$(RTL)/unix

ifeq ($(CPU_TARGET),i386)
CPU_UNITS=ports cpu mmx graph ggigraph
else
CPU_UNITS=
endif

UNITPREFIX=rtl

# Use new feature from 1.0.5 version
# that generates release PPU files
# which will not be recompiled
ifdef RELEASE
ifeq ($(findstring 1.0.2,$(FPC_VERSION)),)
ifeq ($(findstring 1.0.4,$(FPC_VERSION)),)
override FPCOPT+=-Ur
endif
endif
endif

# If 1.0.6, we must define hasunix.

ifneq ($(findstring 1.0.6,$(FPC_VERSION)),)
override FPCOPT+=-dHASUNIX
endif

SYSTEMUNIT=syslinux
LINUXUNIT=linux
PRT0=prt0
override FPCOPT+=-dUNIX

# Paths
OBJPASDIR=$(RTL)/objpas
GRAPHDIR=$(INC)/graph

# Use new graph unit ?
# NEWGRAPH=YES
# Use LibGGI ?
# Use
#
ifndef USELIBGGI
USELIBGGI=NO
endif

[rules]
# Get the $(SYSTEMUNIT) independent include file names.
# This will set the following variables :
# SYSINCNAMES
include $(INC)/makefile.inc
SYSINCDEPS=$(addprefix $(INC)/,$(SYSINCNAMES))

# Get the processor dependent include file names.
# This will set the following variables :
# CPUINCNAMES
include $(PROCINC)/makefile.cpu
SYSCPUDEPS=$(addprefix $(PROCINC)/,$(CPUINCNAMES))

# Put $(SYSTEMUNIT) unit dependencies together.
SYSDEPS=$(SYSINCDEPS) $(SYSCPUDEPS)


#
# Loaders
#

prt0$(OEXT) : $(CPU_TARGET)/$(PRT0).as
        $(AS) -o prt0$(OEXT) $(CPU_TARGET)/$(PRT0).as

dllprt0$(OEXT) : $(CPU_TARGET)/dllprt0.as
        $(AS) -o dllprt0$(OEXT) $(CPU_TARGET)/dllprt0.as

gprt0$(OEXT) : $(CPU_TARGET)/gprt0.as
        $(AS) -o gprt0$(OEXT) $(CPU_TARGET)/gprt0.as

cprt0$(OEXT) : $(CPU_TARGET)/cprt0.as
        $(AS) -o cprt0$(OEXT) $(CPU_TARGET)/cprt0.as

cprt21$(OEXT) : $(CPU_TARGET)/cprt21.as
        $(AS) -o cprt21$(OEXT) $(CPU_TARGET)/cprt21.as

# still need to use gprt1, because gprt21 crashes
gprt21$(OEXT) : $(CPU_TARGET)/gprt0.as
        $(AS) -o gprt21$(OEXT) $(CPU_TARGET)/gprt0.as


#
# $(SYSTEMUNIT) Units ($(SYSTEMUNIT), Objpas, Strings)
#

$(SYSTEMUNIT)$(PPUEXT) : $(SYSTEMUNIT).pp sysconst.inc systypes.inc syscalls.inc $(SYSDEPS)
        $(COMPILER) -Us -Sg $(SYSTEMUNIT).pp

objpas$(PPUEXT): $(OBJPASDIR)/objpas.pp $(INC)/except.inc $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) -I$(OBJPASDIR) $(OBJPASDIR)/objpas.pp

strings$(PPUEXT) : $(INC)/strings.pp $(INC)/stringsi.inc\
                   $(PROCINC)/strings.inc $(PROCINC)/stringss.inc\
                   $(SYSTEMUNIT)$(PPUEXT)

#
# $(SYSTEMUNIT) Dependent Units
#

linux$(PPUEXT) : linux.pp strings$(PPUEXT) $(INC)/textrec.inc $(INC)/filerec.inc \
                 syscalls.inc systypes.inc sysconst.inc $(UNIXINC)/timezone.inc $(SYSTEMUNIT)$(PPUEXT) \
                 unixsysc.inc

ports$(PPUEXT) : ports.pp linux$(PPUEXT) objpas$(PPUEXT)

dl$(PPUEXT) : $(UNIXINC)/dl.pp

dynlibs$(PPUEXT) : $(INC)/dynlibs.pp $(UNIXINC)/dynlibs.inc dl$(PPUEXT) objpas$(PPUEXT)


#
# TP7 Compatible RTL Units
#

dos$(PPUEXT) : dos.pp $(INC)/filerec.inc $(INC)/textrec.inc strings$(PPUEXT) \
               linux$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)

crt$(PPUEXT) : crt.pp $(INC)/textrec.inc linux$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)

objects$(PPUEXT) : $(INC)/objects.pp $(UNIXINC)/objinc.inc $(SYSTEMUNIT)$(PPUEXT)

printer$(PPUEXT) : printer.pp $(INC)/textrec.inc linux$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)

#
# Graph
#
include $(GRAPHDIR)/makefile.inc
GRAPHINCDEPS=$(addprefix $(GRAPHDIR)/,$(GRAPHINCNAMES))

graph$(PPUEXT) : graph.pp linux$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT) \
                 $(GRAPHINCDEPS) $(UNIXINC)/graph16.inc
        $(COMPILER) -I$(GRAPHDIR) $(UNIXINC)/graph.pp

ggigraph$(PPUEXT) : $(UNIXINC)/ggigraph.pp linux$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT) \
                 $(GRAPHINCDEPS)
        $(COMPILER) -I$(GRAPHDIR) $(UNIXINC)/ggigraph.pp

#
# Delphi Compatible Units
#

sysutils$(PPUEXT) : sysutils.pp $(wildcard $(OBJPASDIR)/*.inc) \
                    objpas$(PPUEXT) linux$(PPUEXT) errors$(PPUEXT)
        $(COMPILER) -I$(OBJPASDIR) $(UNIXINC)/sysutils.pp

typinfo$(PPUEXT): $(OBJPASDIR)/typinfo.pp objpas$(PPUEXT)
        $(COMPILER) -Sg $(OBJPASDIR)/typinfo.pp

math$(PPUEXT): $(OBJPASDIR)/math.pp objpas$(PPUEXT) sysutils$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/math.pp

gettext$(PPUEXT): $(OBJPASDIR)/gettext.pp objpas$(PPUEXT) sysutils$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/gettext.pp

#
# Other $(SYSTEMUNIT)-independent RTL Units
#

cpu$(PPUEXT) : $(PROCINC)/cpu.pp $(SYSTEMUNIT)$(PPUEXT)

mmx$(PPUEXT) : $(PROCINC)/mmx.pp cpu$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)

getopts$(PPUEXT) : $(INC)/getopts.pp $(SYSTEMUNIT)$(PPUEXT)

heaptrc$(PPUEXT) : $(INC)/heaptrc.pp $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) -Sg $(INC)/heaptrc.pp

lineinfo$(PPUEXT) : $(INC)/lineinfo.pp $(SYSTEMUNIT)$(PPUEXT)


#
# Other $(SYSTEMUNIT)-dependent RTL Units
#

sockets$(PPUEXT) : sockets.pp $(INC)/textrec.inc $(INC)/filerec.inc \
                   linux$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)

errors$(PPUEXT) : errors.pp strings$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)

ipc$(PPUEXT) : ipc.pp linux$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)

terminfo$(PPUEXT) : terminfo.pp linux$(PPUEXT)

callspec$(PPUEXT) : $(INC)/callspec.pp $(SYSTEMUNIT)$(PPUEXT)
