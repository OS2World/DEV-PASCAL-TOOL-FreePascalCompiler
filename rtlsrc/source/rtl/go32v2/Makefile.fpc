#
#   Makefile.fpc for Go32v2 RTL
#

[package]
main=rtl

[target]
loaders=prt0 exceptn fpu
units=system profile objpas strings \
      go32 dpmiexcp initc ports dxeload emu387 \
      dos crt objects printer graph \
      sysutils math typinfo \
      cpu mmx getopts heaptrc lineinfo \
      msmouse \
      video mouse keyboard vesamode
rsts=math typinfo

[require]
nortl=y

[install]
fpcpackage=y

[default]
fpcdir=../..
target=go32v2
cpu=i386

[compiler]
includedir=$(INC) $(PROCINC)
sourcedir=$(INC) $(PROCINC)
targetdir=.


[prerules]
RTL=..
INC=../inc
PROCINC=../$(CPU_TARGET)

UNITPREFIX=rtl

# Use new feature from 1.0.5 version
# that generates release PPU files
# which will not be recompiled
ifdef RELEASE
ifeq ($(findstring 1.0.2,$(FPC_VERSION)),)
ifeq ($(findstring 1.0.4,$(FPC_VERSION)),)
override FPCOPT+=-Ur
endif
endif
endif

# Paths
OBJPASDIR=$(RTL)/objpas
GRAPHDIR=$(INC)/graph

# Insert exception handler in system unit
ifdef EXCEPTIONS_IN_SYSTEM
override FPCOPT+=-dEXCEPTIONS_IN_SYSTEM
endif

# Insert exception handler in system unit
ifdef NO_EXCEPTIONS_IN_SYSTEM
override FPCOPT+=-dNO_EXCEPTIONS_IN_SYSTEM
endif


[rules]
# Get the system independent include file names.
# This will set the following variables :
# SYSINCNAMES
include $(INC)/makefile.inc
SYSINCDEPS=$(addprefix $(INC)/,$(SYSINCNAMES))

# Get the processor dependent include file names.
# This will set the following variables :
# CPUINCNAMES
include $(PROCINC)/makefile.cpu
SYSCPUDEPS=$(addprefix $(PROCINC)/,$(CPUINCNAMES))

# Put system unit dependencies together.
SYSDEPS=$(SYSINCDEPS) $(SYSCPUDEPS)


#
# Loaders
#

prt0$(OEXT) : v2prt0.as
        $(AS) -o prt0$(OEXT) v2prt0.as

#
# System Units (System, Objpas, Strings)
#

system$(PPUEXT) : system.pp $(SYSDEPS)
        $(COMPILER) -Us -Sg system.pp
	$(EXECPPAS)

objpas$(PPUEXT): $(OBJPASDIR)/objpas.pp $(INC)/except.inc system$(PPUEXT)
        $(COMPILER) -I$(OBJPASDIR) $(OBJPASDIR)/objpas.pp
	$(EXECPPAS)

strings$(PPUEXT) : $(INC)/strings.pp $(INC)/stringsi.inc \
                   $(PROCINC)/strings.inc $(PROCINC)/stringss.inc \
                   system$(PPUEXT)

#
# System Dependent Units
#

go32$(PPUEXT) : go32.pp system$(PPUEXT)

dpmiexcp$(PPUEXT) : dpmiexcp.pp exceptn$(OEXT) system$(PPUEXT)
        $(COMPILER) -Sg dpmiexcp.pp
	$(EXECPPAS)

initc$(PPUEXT) : initc.pp system$(PPUEXT)

profile$(PPUEXT) : profile.pp dpmiexcp$(PPUEXT) go32$(PPUEXT)
	$(subst -pg ,-pg- ,$(COMPILER)) profile.pp
	$(EXECPPAS)

dxeload$(PPUEXT) : dxeload.pp system$(PPUEXT)

emu387$(PPUEXT) : emu387.pp fpu$(OEXT) strings$(PPUEXT) dxeload$(PPUEXT) \
                  dpmiexcp$(PPUEXT)

ports$(PPUEXT) : ports.pp objpas$(PPUEXT) system$(PPUEXT)

#
# TP7 Compatible RTL Units
#

dos$(PPUEXT) : dos.pp $(INC)/filerec.inc $(INC)/textrec.inc \
               go32$(PPUEXT) strings$(PPUEXT) system$(PPUEXT)

crt$(PPUEXT) : crt.pp $(INC)/textrec.inc go32$(PPUEXT) system$(PPUEXT)

objects$(PPUEXT) : $(INC)/objects.pp objinc.inc system$(PPUEXT)

printer$(PPUEXT) : printer.pp system$(PPUEXT)

#
# Graph
#

include $(GRAPHDIR)/makefile.inc
GRAPHINCDEPS=$(addprefix $(GRAPHDIR)/,$(GRAPHINCNAMES))

graph$(PPUEXT) : graph.pp go32$(PPUEXT) ports$(PPUEXT) system$(PPUEXT) \
                 $(GRAPHINCDEPS) vesa.inc vesah.inc dpmi.inc
        $(COMPILER) -I$(GRAPHDIR) graph.pp
	$(EXECPPAS)

#
# Delphi Compatible Units
#

sysutils$(PPUEXT) : sysutils.pp $(wildcard $(OBJPASDIR)/*.inc) \
                    objpas$(PPUEXT) dos$(PPUEXT) go32$(PPUEXT)
        $(COMPILER) -I$(OBJPASDIR) sysutils.pp

typinfo$(PPUEXT): $(OBJPASDIR)/typinfo.pp objpas$(PPUEXT)
        $(COMPILER) -Sg $(OBJPASDIR)/typinfo.pp

math$(PPUEXT): $(OBJPASDIR)/math.pp objpas$(PPUEXT) sysutils$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/math.pp

#
# Other system-independent RTL Units
#

cpu$(PPUEXT) : $(PROCINC)/cpu.pp system$(PPUEXT)

mmx$(PPUEXT) : $(PROCINC)/mmx.pp cpu$(PPUEXT) system$(PPUEXT)

getopts$(PPUEXT) : $(INC)/getopts.pp system$(PPUEXT)

heaptrc$(PPUEXT) : $(INC)/heaptrc.pp system$(PPUEXT)
        $(COMPILER) -Sg $(INC)/heaptrc.pp
	$(EXECPPAS)

lineinfo$(PPUEXT) : $(INC)/lineinfo.pp system$(PPUEXT)

charset$(PPUEXT) : $(INC)/charset.pp system$(PPUEXT)

#
# Other system-dependent RTL Units
#

msmouse$(PPUEXT) : msmouse.pp system$(PPUEXT)

callspec$(PPUEXT) : $(INC)/callspec.pp system$(PPUEXT)
