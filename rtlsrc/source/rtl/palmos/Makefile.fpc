#
#   Makefile.fpc for PalmOS RTL
#   Always compiled to generate 68000 code
#

[package]
main=rtl

[target]
#No loarders as we use C ones for now
#loaders=prt0
units=$(SYSTEMUNIT) systraps palm
# api directory units seem incomplete: common sysall systraps ui
rsts=math

[require]
nortl=y

[install]
fpcpackage=y

[default]
fpcdir=../..
target=palmos
cpu=m68k

[compiler]
options=-O0
includedir=$(INC) $(PROCINC)
sourcedir=$(INC) $(PROCINC)
targetdir=.


[prerules]
RTL=..
INC=../inc
PROCINC=../$(CPU_TARGET)
ASMEXT=.s
SYSTEMUNIT=syspalm

UNITPREFIX=rtl

# Use new feature from 1.0.5 version
# that generates release PPU files
# which will not be recompiled
ifdef RELEASE
ifeq ($(findstring 1.0.2,$(FPC_VERSION)),)
ifeq ($(findstring 1.0.4,$(FPC_VERSION)),)
override FPCOPT+=-Ur
endif
endif
endif

# Paths
OBJPASDIR=$(RTL)/objpas
GRAPHDIR=$(INC)/graph

[rules]
# Get the system independent include file names.
# This will set the following variables :
# SYSINCNAMES
include $(INC)/makefile.inc
SYSINCDEPS=$(addprefix $(INC)/,$(SYSINCNAMES))

# Get the processor dependent include file names.
# This will set the following variables :
# CPUINCNAMES
include $(PROCINC)/makefile.cpu
SYSCPUDEPS=$(addprefix $(PROCINC)/,$(CPUINCNAMES))

# Put system unit dependencies together.
SYSDEPS=$(SYSINCDEPS) $(SYSCPUDEPS)


#
# Loaders
#

#prt0$(OEXT) : prt0$(LOADEREXT)
#	-$(AS) prt0$(LOADEREXT) -m68000 -o prt0$(OEXT)

#gprt0$(OEXT) : $(GLOADERAS)
#	-$(AS) $(GLOADERAS) -o gprt0$(OEXT)

#
# Base Units (System, strings, os-dependent-base-unit)
#

$(SYSTEMUNIT)$(PPUEXT) : syspalm.pp $(SYSLINUXDEPS) $(SYSDEPS)
	$(COMPILER) -ui386 -dm68k -Us -Sg syspalm.pp $(REDIR)
	
systraps$(PPUEXT) : systraps.pp $(SYSTEMUNIT)$(PPUEXT)
	$(COMPILER) systraps $(REDIR)

palm$(PPUEXT) : palm.pp systraps$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)
	$(COMPILER) palm $(REDIR)

common$(PPUEXT) : api/common.pp api/common.inc $(SYSTEMUNIT)$(PPUEXT)
	$(COMPILER) -Fiapi api/common.pp

sysall$(PPUEXT) : api/sysall.pp api/common.inc api/systraps.inc api/sysmgr.inc $(SYSTEMUNIT)$(PPUEXT)
	$(COMPILER) -Fiapi api/sysall.pp

ui$(PPUEXT) : api/ui.pp api/common.inc api/init.inc api/rect.inc api/font.inc api/fontsel.inc api/font/imn $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) -Fiapi api/ui.pp


objpas$(PPUEXT): $(OBJPASDIR)/objpas.pp $(INC)/except.inc $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) -I$(OBJPASDIR) $(OBJPASDIR)/objpas.pp

strings$(PPUEXT) : $(INC)/strings.pp $(INC)/stringsi.inc\
                   $(PROCINC)/strings.inc $(PROCINC)/stringss.inc\
                   $(SYSTEMUNIT)$(PPUEXT)

exec$(PPUEXT) : exec.pp exec.inc $(SYSTEMUNIT)$(PPUEXT)
	$(COMPILER) exec $(REDIR)
#
# Delphi Compatible Units
#

sysutils$(PPUEXT) : sysutils.pp $(wildcard $(OBJPASDIR)/*.inc) \
                    objpas$(PPUEXT) dos$(PPUEXT)
        $(COMPILER) -I$(OBJPASDIR) sysutils.pp

typinfo$(PPUEXT): $(OBJPASDIR)/typinfo.pp objpas$(PPUEXT)
        $(COMPILER) -Sg $(OBJPASDIR)/typinfo.pp

math$(PPUEXT): $(OBJPASDIR)/math.pp objpas$(PPUEXT) sysutils$(PPUEXT)
        $(COMPILER) $(OBJPASDIR)/math.pp


#
# System Dependent Units
#

#
# TP7 Compatible RTL Units
#

dos$(PPUEXT) : $(DOSDEPS) $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) dos $(REDIR)

crt$(PPUEXT) : crt.pp $(INC)/textrec.inc $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) crt $(REDIR)

printer$(PPUEXT) : printer.pp $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) printer $(REDIR)
	
objects$(PPUEXT) : $(INC)/objects.pp objinc.inc $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) $(INC)/objects.pp $(REDIR)



#
# Other RTL Units
#

getopts$(PPUEXT) : $(INC)/getopts.pp strings$(PPUEXT) $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) $(INC)/getopts.pp $(REDIR)
	
heaptrc$(PPUEXT) : $(INC)/heaptrc.pp $(SYSTEMUNIT)$(PPUEXT)
        $(COMPILER) $(INC)/heaptrc.pp $(REDIR)
